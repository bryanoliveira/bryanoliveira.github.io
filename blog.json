[{"html":"<p>A <a href=\"https://en.wikipedia.org/wiki/Cellular_automaton\">Cellular Automata</a> program built with C++, CUDA and OpenGL. It&#39;s built to run on a GPU but it also supports CPU-only execution (mainly for relative speedup comparisons).</p>\n<p>The main objective of this project is to allow scaling up to a fairly large number of cells while maintaining the code legibility and allowing for further customizations. It supports command line arguments to set up quick configs (run <code>./automata -h</code> for details) like headless mode (which is significantly faster) and initial patterns (which can be loaded from the <code>patterns</code> folder). It doesn&#39;t yet support the definition of evolution rules at runtime, but I&#39;m working on that.</p>\n<p>This program can currently evolve a dense &amp; high entropy 144 million cell Conway&#39;s Game of Life grid (12000x12000) with rendering enabled with up to 15 FPS on a Ryzen 7 3700X / RTX 3080 using up to 2GB RAM and 9GB VRAM (which is the actual scaling limiter).</p>\n<a href=\"https://raw.githubusercontent.com/bryanoliveira/cellular-automata/master/docs/12000x12000.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/bryanoliveira/cellular-automata/master/docs/12000x12000.png\" style=\"width:100%\">\n</a>\n\n<blockquote>\n<p>A 12000x12000 grid running Conway&#39;s Game of life.</p>\n</blockquote>\n<a href=\"https://raw.githubusercontent.com/bryanoliveira/cellular-automata/master/docs/1000x1000.gif\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/bryanoliveira/cellular-automata/master/docs/1000x1000.gif\" style=\"width:100%\">\n</a>\n> A 1000x1000 grid running Conway's Game of life.\n\n<hr>\n<p>This program was developed during the 2021/1 Parallel Computing (CCO0455) Computer Science graduate course at Universidade Federal de Goiás (UFG, Brazil).</p>\n","title":"Cellular Automata Framework","slug":"2021-03-10-cellular-automata","date":"2021-03-10","urls":[{"cta":"Code","url":"https://github.com/bryanoliveira/cellular-automata"}],"type":"Project","tags":["project","parallel","cuda","opengl"],"image":"/img/cellular_automata.gif","description":"A <a href=\"https://en.wikipedia.org/wiki/Cellular_automaton\" target=\"_blank\">Cellular Automata</a> program built with C++, CUDA and OpenGL. The main objective of this project is to allow scaling up to a fairly large number of cells while maintaining the code legibility and allowing for further customizations."},{"html":"<p>Intrinsic motivation for robotic manipulation learning with sparse rewards - Study of the impact of curiosity and intrinsic motivation as an exploration strategy for deep reinforcement learning agents on sparse-reward robotic manipulator environments.</p>\n","title":"Undergraduate Thesis","slug":"2019-12-10-undergraduate-thesis","date":"2019-12-10","urls":[{"cta":"Code","url":"https://github.com/bryanoliveira/undergraduate-thesis"},{"cta":"Paper","url":"https://github.com/bryanoliveira/undergraduate-thesis/blob/master/Text%20-%20Intrinsic%20motivation%20for%20robotic%20manipulation%20learning%20with%20sparse%20rewards.pdf"}],"type":"Research","tags":["research","publication"],"image":"/img/pick.gif","description":"Intrinsic motivation for robotic manipulation learning with sparse rewards - Study of the impact of curiosity and intrinsic motivation as an exploration strategy for deep reinforcement learning agents on sparse-reward robotic manipulator environments."},{"html":"<p>My code for the <a href=\"https://www.kaggle.com/c/bone-age-regression\" target=\"_blank\">I2A2 Bone Age Regression competition</a>. I learned a lot building this pipeline from scratch and was able to experiment with different model architectures and optimizers. This was my first end-to-end image regression model and it was very nice seeing my theoretic knowledge working in practice.</p>\n","title":"Bone Age Regression","slug":"2019-11-10-bone-age-regression","date":"2019-11-10","urls":[{"cta":"Code","url":"https://github.com/bryanoliveira/bone-age-regression"}],"type":"Deep Learning","tags":["project","ai","deeplearning"],"image":"/img/bone.png","description":"My code for the <a href=\"https://www.kaggle.com/c/bone-age-regression\" target=\"_blank\">I2A2 Bone Age Regression competition</a>. I learned a lot building this pipeline from scratch and was able to experiment with different model architectures and optimizers. This was my first end-to-end image regression model and it was very nice seeing my theoretic knowledge working in practice."},{"html":"<p>Quack is a Unity3D game made for the Global Game Jam 2019 with theme &quot;What home means to you?&quot;. The game consists in a happy chicken that wants to build a new home for it&#39;s children. You have to collect sticks and group them in top of the main tree to make a nice nest. This game was developed within 12 hours.</p>\n","title":"Quack","slug":"2019-01-10-quack","date":"2019-01-10","urls":[{"cta":"Code","url":"https://github.com/bryanoliveira/gjams-2019-quack"}],"type":"Game","tags":["project","game","jam","indie"],"image":"/img/quack.png","description":"Quack is a Unity3D game made for the Global Game Jam 2019 with theme \"What home means to you?\". The game consists in a happy chicken that wants to build a new home for it's children. You have to collect sticks and group them in top of the main tree to make a nice nest. This game was developed within 12 hours."},{"html":"<p>3D Rigid Body Physics simulator using only Processing&#39;s point() and line functions. Uses Digital Differential Analyzer (DDA) to render lines between two points, Scan Line to render polygons, normal calculation to determine faces to render in 3D space and Newtonian physics. Written in Java.</p>\n","title":"Rigid Body Physics Simulator","slug":"2018-12-10-rigid-body-physics","date":"2018-12-10","urls":[{"cta":"Code","url":"https://github.com/bryanoliveira/processing-physics-simulator"}],"type":"Rendering","tags":["project","rendering","simulation"],"image":"/img/rigidbody_physics.gif","description":"3D Rigid Body Physics simulator using only Processing's point() and line functions. Uses Digital Differential Analyzer (DDA) to render lines between two points, Scan Line to render polygons, normal calculation to determine faces to render in 3D space and Newtonian physics. Written in Java."},{"html":"<p>A stack consisting of image processing, computer vision, team coordination, navigation, control and communication softwares to compete in the 2018&#39;s Latin-American Robotics Competition for the Pequi Mecânico UFG - INF&#39;s team.</p>\n","title":"IEEE VSSS Team","slug":"2018-10-10-ieee-vsss-team","date":"2018-10-10","urls":[{"cta":"Code","url":"https://github.com/bryanoliveira/PY-VSSS-INF"}],"type":"Robotics","tags":["project","robotics","leadership"],"image":"/img/vsss.png","description":"A stack consisting of image processing, computer vision, team coordination, navigation, control and communication softwares to compete in the 2018's Latin-American Robotics Competition for the Pequi Mecânico UFG - INF's team."},{"html":"<p>In a world overrun by zombies you must survive as long as possible and defeat different bosses while unlocking weapons, upgrades, equipments, characters, maps and much more. Reviving the classics of the 80&#39;s and 90&#39;s, Die Zombit is a retrowave top-down shooting game that has a striking soundtrack and an addictive gameplay which guarantee many hours of fun.</p>\n<div class=\"text-center\">\n    <img src=\"https://raw.githubusercontent.com/bryanoliveira/unity-zombit/master/Images/3.png\" width=\"340\" height=\"220\" class=\"m-1\"> \n    <img src=\"https://raw.githubusercontent.com/bryanoliveira/unity-zombit/master/Images/2.png\" width=\"340\" height=\"220\" class=\"m-1\">\n</div>\n\n<p>I made this game during my first year of Computer Science course (I had a lot of free time back then). I believe it could be much improved with newer versions of Unity3D, better design patterns and algorithmic complexity in mind. Yet, it is a fun game that you can <a href=\"https://play.google.com/store/apps/details?id=com.elitgames.zombit\">download</a> (an older version</p>\n<div class=\"text-center\">\n<img src=\"https://raw.githubusercontent.com/bryanoliveira/unity-zombit/master/Images/1.png\" width=\"340\" height=\"220\" class=\"m-1\">\n</div>\n","title":"Die Zombit","slug":"2015-06-10-die-zombit","date":"2015-06-10","urls":[{"cta":"Code","url":"https://github.com/bryanoliveira/unity-zombit"},{"cta":"Store","url":"https://play.google.com/store/apps/details?id=com.elitgames.zombit"}],"type":"Game","tags":["project","game","indie"],"image":"/img/zombit.png","description":"Reviving the classics of the 80's and 90's, Die Zombit is a retrowave top-down shooting game that has a striking soundtrack and an addictive gameplay which guarantee many hours of fun."}]